{"version":3,"sources":["styles/Colors.ts","components/Containers.tsx","components/Text.tsx","components/Images.tsx","components/Link.tsx","components/Breadcrumbs.tsx","components/Logo.tsx","components/Footer.tsx","components/Header.tsx","components/LinkWrapper.ts","components/Carousel.tsx","components/PortraitHorizontalList.tsx","components/Section.tsx","components/TitleBanner.tsx","components/TitleTwoLines.tsx","pages/HomePage.tsx","environment/index.tsx","services/connector.ts","services/PageService.ts","pages/ExperiencePage.tsx","pages/PlacePage.tsx","pages/RegionPage.tsx","components/ScrollToTop.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Colors","Container","styled","div","TopImage","img","TopImageContainer","image","src","url","alt","AppContainer","WhiteSmoke","PageContentContainer","White","PageContainer","children","Text","Description","Information","Caption","Title","Image","lazy","rest","placeholder","ref","actual","imageProps","CaptionedImageContainer","FullWidthImage","ImageCaption","CaptionedImage","caption","StyledLink","RouterLink","plain","Link","label","link","to","Separator","FaChevronRight","CrumbContainer","Breadcrumbs","crumbs","map","crumb","idx","length","TopText","MiddleText","BottomText","Logo","Images","Content","Subscribe","SubscribeTitle","SubscribeText","BottomContainer","Social","TitledContainer","Titled","title","TitledContent","Copyright","Footer","currentYear","Date","getFullYear","HeaderContainer","HeaderLogo","SectionsContainer","Section","selected","GreyDark","sections","route","Header","location","useLocation","section","pathname","startsWith","LinkWrapper","StyledCarousel","CarouselProvider","SlideContainer","ButtonContainer","Carousel","items","maxVisibleSlides","visibleSlides","naturalSlideWidth","naturalSlideHeight","isIntrinsicHeight","totalSlides","step","infinite","item","index","BlueSolid","ListTitle","HorizontalListContainer","PortraitContainer","PortraitImage","PortraitTitleContainer","PortraitTitle","PortraitSubtitle","PortraitHorizontalList","subtitle","SectionContainer","BlueDark","InformationText","BlackText","DoubleImageContainer","CaptionedImages","image1Tall","image1Wide","image1Caption","image2Tall","image2Wide","image2Caption","text","TITLE_SIZE","TitleBanner","MARGIN","TitleTwoLines","Black","HomePage","envParams","api","window","host","connector","axios","create","baseURL","EnvParams","headers","getPlaces","regionPageId","a","get","data","getPlacePage","slug","getExperiencePage","getRegionPage","id","places","ExperiencePage","useParams","useState","experience","setExperience","useEffect","getPlace","PageService","response","headerImage","SideContainer","PlacePage","place","setPlace","meta","parent","toLocaleLowerCase","Row","Col","md","description","width","address","latitude","longitude","AddressContainer","region","setRegion","getRegion","portraitImage","ScrollToTop","history","useHistory","removeListener","listen","scrollTo","App","exact","path","component","RegionPage","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.adaa2e5b.chunk.js","sourcesContent":["enum Colors {\r\n  White = '#FFFFFF',\r\n  Black = '#000000',\r\n  BlackText = '#202020',\r\n  GreyLight = '#F6F6F6',\r\n  GreySmooth = '#CCCCCC',\r\n  GreyDark = '#95999A',\r\n  GreyDarker = '#6F7374',\r\n  BlueDark = '#2C3850',\r\n  BlueSolid = '#2B384F',\r\n  WhiteSmoke = '#F5F5F5',\r\n}\r\n\r\nexport default Colors;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from 'styles';\r\nimport { Image } from 'types';\r\n\r\nconst Container = styled.div``;\r\n\r\nconst TopImage = styled.img`\r\n  width: 100%;\r\n  min-height: 0.45vw;\r\n`;\r\n\r\ntype ImageContainerProps = {\r\n  image: Image;\r\n};\r\n\r\nexport const TopImageContainer: React.FC<ImageContainerProps> = ({ image }) => (\r\n  <Container>\r\n    <TopImage src={image.url} alt={image.alt} />\r\n  </Container>\r\n);\r\n\r\nexport const AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  > div {\r\n    max-width: 1920px;\r\n    width: 100%;\r\n  }\r\n  background-color: ${Colors.WhiteSmoke};\r\n`;\r\n\r\ntype PageContainerProps = {\r\n  image: Image;\r\n};\r\n\r\nconst PageContentContainer = styled.div`\r\n  padding: 6rem 7rem;\r\n  background-color: ${Colors.White};\r\n`;\r\n\r\nexport const PageContainer: React.FC<PageContainerProps> = ({\r\n  children,\r\n  image,\r\n}) => (\r\n  <Container>\r\n    <TopImageContainer image={image} />\r\n    <PageContentContainer>{children}</PageContentContainer>\r\n  </Container>\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const Text = styled.div`\r\n  font-size: 1.2rem;\r\n  text-align: justify;\r\n  font-family: 'Quattrocento', serif;\r\n`;\r\n\r\nexport const Description = styled(Text)`\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Information = styled(Text)`\r\n  font-size: 1.3rem;\r\n  font-weight: 300;\r\n`;\r\n\r\nexport const Caption = styled(Text)``;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n`;\r\n","import React from 'react';\r\nimport { LazyImage as ReactLazyImage } from 'react-lazy-images';\r\nimport styled from 'styled-components';\r\n\r\nimport * as Text from './Text';\r\n\r\ntype ImageProps = {\r\n  src: string;\r\n  alt?: string;\r\n  size?: number;\r\n  width?: string;\r\n  lazy?: boolean;\r\n};\r\n\r\nexport const Image: React.FC<ImageProps> = ({ src, lazy, ...rest }) =>\r\n  !lazy ? (\r\n    <img src={src} alt={rest.alt} {...rest} />\r\n  ) : (\r\n    <ReactLazyImage\r\n      placeholder={({ ref }: { ref?: any }) => <div ref={ref} />}\r\n      src={src}\r\n      actual={({ imageProps }: { imageProps?: any }) => (\r\n        <img alt={imageProps.alt} {...rest} {...imageProps} />\r\n      )}\r\n    />\r\n  );\r\n\r\nconst CaptionedImageContainer = styled.div``;\r\n\r\nexport const FullWidthImage = styled(Image)`\r\n  width: 100%;\r\n`;\r\n\r\nconst ImageCaption = styled(Text.Caption)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\ntype CaptionedImageProps = ImageProps & {\r\n  caption: string;\r\n  alt?: string;\r\n};\r\n\r\nexport const CaptionedImage: React.FC<CaptionedImageProps> = ({\r\n  src,\r\n  caption,\r\n  alt,\r\n}) => (\r\n  <CaptionedImageContainer>\r\n    <FullWidthImage src={src} alt={alt ?? caption} />\r\n    <ImageCaption>{caption}</ImageCaption>\r\n  </CaptionedImageContainer>\r\n);\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Colors } from 'styles';\r\n\r\ntype StyledLinkProps = {\r\n  plain?: number;\r\n};\r\n\r\nconst StyledLink = styled(RouterLink)<StyledLinkProps>`\r\n  ${({ plain }) => (plain ? 'text-decoration: none !important;' : '')}\r\n  color: ${Colors.White};\r\n  &:hover {\r\n    color: ${Colors.White};\r\n  }\r\n`;\r\n\r\ntype LinkProps = {\r\n  label: string;\r\n  link?: string;\r\n  plain?: boolean;\r\n};\r\n\r\nconst Link: React.FC<LinkProps> = ({ label, link, plain }) =>\r\n  link ? (\r\n    <StyledLink plain={plain ? 1 : 0} to={link}>\r\n      {label}\r\n    </StyledLink>\r\n  ) : (\r\n    <div>{label}</div>\r\n  );\r\n\r\nexport default Link;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\n\r\nimport Link from './Link';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Separator = styled(FaChevronRight)`\r\n  margin: 0 0.3rem;\r\n`;\r\n\r\nconst CrumbContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\ntype Crumb = {\r\n  label: string;\r\n  link?: string;\r\n};\r\n\r\ntype BreadcrumbsProps = {\r\n  crumbs: Crumb[];\r\n};\r\n\r\nconst Breadcrumbs: React.FC<BreadcrumbsProps> = ({ crumbs }) => {\r\n  return (\r\n    <Container>\r\n      {crumbs.map((crumb, idx) => (\r\n        <CrumbContainer key={idx}>\r\n          <Link {...crumb} />\r\n          {idx < crumbs.length - 1 && <Separator />}\r\n        </CrumbContainer>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Text = styled.div`\r\n  font-size: 0.8rem;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst TopText = styled(Text)``;\r\n\r\nconst MiddleText = styled(Text)`\r\n  font-size: 2.3rem;\r\n  line-height: 2rem;\r\n`;\r\n\r\nconst BottomText = styled(Text)`\r\n  text-align: right;\r\n`;\r\n\r\nconst Logo: React.FC = ({ ...rest }) => (\r\n  <Container {...rest}>\r\n    <TopText>Just</TopText>\r\n    <MiddleText>Iceland</MiddleText>\r\n    <BottomText>Things</BottomText>\r\n  </Container>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from 'styles';\r\n\r\nimport * as Images from './Images';\r\nimport Link from './Link';\r\nimport Logo from './Logo';\r\nimport * as Text from './Text';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  color: ${Colors.White};\r\n`;\r\n\r\nconst Image = styled(Images.Image)`\r\n  width: 100%;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-top: 5rem;\r\n`;\r\n\r\nconst Subscribe = styled.div``;\r\n\r\nconst SubscribeTitle = styled.div`\r\n  text-transform: uppercase;\r\n  letter-spacing: 1.3rem;\r\n  font-size: 4rem;\r\n`;\r\n\r\nconst SubscribeText = styled.div`\r\n  font-size: 1.1rem;\r\n  letter-spacing: 0.4rem;\r\n  margin-top: 0.7rem;\r\n`;\r\n\r\nconst BottomContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 5rem;\r\n  > * {\r\n    flex: 1;\r\n    margin: 0 1rem;\r\n  }\r\n`;\r\n\r\nconst Social = styled.div``;\r\n\r\nconst Title = styled.div`\r\n  letter-spacing: 0.4rem;\r\n  border-bottom: 1px solid ${Colors.White};\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst TitledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\ntype TitledProps = {\r\n  title: string;\r\n};\r\n\r\nconst Titled: React.FC<TitledProps> = ({ title, children }) => (\r\n  <TitledContainer>\r\n    <Title>{title}</Title>\r\n    {children}\r\n  </TitledContainer>\r\n);\r\n\r\nconst TitledContent = styled(Text.Text)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 0.5rem;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Copyright = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  position: absolute;\r\n  bottom: 0.5rem;\r\n  font-size: 0.8rem;\r\n  letter-spacing: 0.5rem;\r\n`;\r\n\r\nconst Footer: React.FC = () => {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <Container>\r\n      <Image src=\"/assets/footer-background.jpg\" />\r\n      <Content>\r\n        <Subscribe>\r\n          <SubscribeTitle>Subscribe</SubscribeTitle>\r\n          <SubscribeText>Subscribe to our monthly newsletter</SubscribeText>\r\n        </Subscribe>\r\n        <BottomContainer>\r\n          <Social>\r\n            <Logo />\r\n          </Social>\r\n          <Titled title=\"Experience\">\r\n            <TitledContent>\r\n              <Link link=\"/tags/northernLights\" label=\"Northern Lights\" />\r\n              <Link link=\"/tags/wildlife\" label=\"Wildlife\" />\r\n              <Link link=\"/tags/iceCaves\" label=\"Ice Caves\" />\r\n            </TitledContent>\r\n          </Titled>\r\n          <Titled title=\"Regions\">\r\n            <TitledContent>\r\n              <Link link=\"/regions/capital\" label=\"Capital & Reykjanes\" />\r\n              <Link link=\"/regions/south\" label=\"South\" />\r\n              <Link link=\"/regions/northEast\" label=\"North-East\" />\r\n              <Link link=\"/regions/northWest\" label=\"North-West\" />\r\n              <Link link=\"/regions/highlands\" label=\"Highlands\" />\r\n            </TitledContent>\r\n          </Titled>\r\n          <Titled title=\"About\">\r\n            <TitledContent>\r\n              Just Iceland Things was created in 2020 by a bunch of people. This\r\n              is the only website you will ever need.\r\n              <br />\r\n              Thank you.\r\n            </TitledContent>\r\n          </Titled>\r\n          <Titled title=\"Contact\">\r\n            <TitledContent>\r\n              oddur@egg.com\r\n              <br />\r\n              +354-823-0885\r\n            </TitledContent>\r\n          </Titled>\r\n        </BottomContainer>\r\n      </Content>\r\n      <Copyright>{`© ${currentYear} - JustIcelandThings.com`}</Copyright>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Logo from './Logo';\r\nimport { Colors } from 'styles';\r\nimport { Link } from 'components';\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n  top: 1rem;\r\n  width: 100%;\r\n  position: absolute;\r\n  color: ${Colors.White};\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst HeaderLogo = styled(Logo)`\r\n  margin: 0 5rem;\r\n`;\r\n\r\nconst SectionsContainer = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  margin-right: 5rem;\r\n  justify-content: space-around;\r\n`;\r\n\r\ntype SectionProps = {\r\n  selected: boolean;\r\n};\r\n\r\nconst Section = styled.div<SectionProps>`\r\n  font-size: 1.8rem;\r\n  border-bottom: ${({ selected }) =>\r\n    `0.3rem solid ${selected ? Colors.White : 'transparent'}`};\r\n  &:hover {\r\n    border-bottom: 0.3rem solid ${Colors.GreyDark};\r\n  }\r\n`;\r\n\r\nconst sections = [\r\n  {\r\n    title: 'Map',\r\n    route: '/map',\r\n  },\r\n  {\r\n    title: 'Regions',\r\n    route: '/places',\r\n  },\r\n  {\r\n    title: 'Experience',\r\n    route: '/experience',\r\n  },\r\n  {\r\n    title: 'Blog',\r\n    route: '/blog',\r\n  },\r\n];\r\n\r\nconst Header: React.FC = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLogo />\r\n      <SectionsContainer>\r\n        {sections.map((section) => (\r\n          <Section\r\n            key={section.route}\r\n            selected={location.pathname.startsWith(section.route)}\r\n          >\r\n            <Link label={section.title} link={section.route} plain />\r\n          </Section>\r\n        ))}\r\n      </SectionsContainer>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Colors } from 'styles';\r\n\r\nconst LinkWrapper = styled(Link)`\r\n  color: ${Colors.White} !important;\r\n`;\r\n\r\nexport default LinkWrapper;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  CarouselProvider,\r\n  Slider,\r\n  Slide,\r\n  ButtonBack,\r\n  ButtonNext,\r\n} from 'pure-react-carousel';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport { FaArrowCircleLeft, FaArrowCircleRight } from 'react-icons/fa';\r\nimport { Colors } from 'styles';\r\n\r\nconst StyledCarousel = styled(CarouselProvider)`\r\n  display: flex;\r\n`;\r\n\r\nconst SlideContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  button {\r\n    font-size: 2rem;\r\n    display: flex;\r\n    height: 100%;\r\n    align-items: center;\r\n    background: none;\r\n    border-color: transparent;\r\n    color: ${Colors.White};\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n  }\r\n`;\r\n\r\ntype CarouselProps = {\r\n  maxVisibleSlides?: number;\r\n  items: JSX.Element[];\r\n};\r\n\r\nconst Carousel: React.FC<CarouselProps> = ({\r\n  items,\r\n  maxVisibleSlides = 4,\r\n  ...rest\r\n}) => {\r\n  const visibleSlides =\r\n    items.length < maxVisibleSlides ? items.length : maxVisibleSlides;\r\n  return (\r\n    <StyledCarousel\r\n      naturalSlideWidth={1}\r\n      naturalSlideHeight={1}\r\n      isIntrinsicHeight\r\n      totalSlides={items.length}\r\n      visibleSlides={visibleSlides}\r\n      step={visibleSlides}\r\n      infinite\r\n      {...rest}\r\n    >\r\n      <ButtonContainer>\r\n        <ButtonBack>\r\n          <FaArrowCircleLeft />\r\n        </ButtonBack>\r\n      </ButtonContainer>\r\n      <Slider>\r\n        {items.map((item, idx) => (\r\n          <Slide key={idx} index={idx}>\r\n            <SlideContainer>{item}</SlideContainer>\r\n          </Slide>\r\n        ))}\r\n      </Slider>\r\n      <ButtonContainer>\r\n        <ButtonNext>\r\n          <FaArrowCircleRight />\r\n        </ButtonNext>\r\n      </ButtonContainer>\r\n    </StyledCarousel>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Colors } from 'styles';\r\nimport * as Images from './Images';\r\nimport { Image } from 'types';\r\nimport LinkWrapper from './LinkWrapper';\r\nimport Carousel from './Carousel';\r\n\r\nconst Container = styled.div`\r\n  // To disregard the parents padding, we need the width to be double the padding\r\n  min-width: calc(100% + 14rem);\r\n  padding: 2rem 7rem 1rem 7rem;\r\n  margin-left: -7rem;\r\n  background-color: ${Colors.BlueSolid};\r\n  color: ${Colors.White};\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst ListTitle = styled.div`\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst HorizontalListContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst PortraitContainer = styled(LinkWrapper)`\r\n  position: relative;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst PortraitImage = styled(Images.FullWidthImage)``;\r\n\r\nconst PortraitTitleContainer = styled.div`\r\n  position: absolute;\r\n  top: 0.3rem;\r\n  left: 0.6rem;\r\n  text-shadow: 1px 2px ${Colors.GreyDark};\r\n`;\r\n\r\nconst PortraitTitle = styled.div`\r\n  font-size: 1.4rem;\r\n  letter-spacing: 0.3rem;\r\n`;\r\n\r\nconst PortraitSubtitle = styled.div`\r\n  font-size: 0.8rem;\r\n  font-weight: 300;\r\n  letter-spacing: 0.05rem;\r\n`;\r\n\r\ntype ListItem = {\r\n  title: string;\r\n  subtitle?: JSX.Element | JSX.Element[];\r\n  image: Image;\r\n  route: string;\r\n};\r\n\r\ntype PortraitHorizontalListProps = {\r\n  title: string;\r\n  items: ListItem[];\r\n};\r\n\r\nconst PortraitHorizontalList: React.FC<PortraitHorizontalListProps> = ({\r\n  items,\r\n  title,\r\n}) => (\r\n  <Container>\r\n    <ListTitle>{title}</ListTitle>\r\n    <HorizontalListContainer>\r\n      <Carousel\r\n        items={items.map((item) => (\r\n          <PortraitContainer key={item.title} to={item.route}>\r\n            <PortraitImage src={item.image.url} />\r\n            <PortraitTitleContainer>\r\n              <PortraitTitle>{item.title}</PortraitTitle>\r\n              {item.subtitle && (\r\n                <PortraitSubtitle>{item.subtitle}</PortraitSubtitle>\r\n              )}\r\n            </PortraitTitleContainer>\r\n          </PortraitContainer>\r\n        ))}\r\n      />\r\n    </HorizontalListContainer>\r\n  </Container>\r\n);\r\n\r\nexport default PortraitHorizontalList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from 'styles';\r\n\r\nimport { PageSection } from 'types';\r\n\r\nimport * as Images from './Images';\r\nimport * as Text from './Text';\r\n\r\nconst SectionContainer = styled.div``;\r\n\r\nconst Title = styled(Text.Title)`\r\n  margin: 2.5rem 0;\r\n  color: ${Colors.BlueDark};\r\n`;\r\n\r\nconst InformationText = styled(Text.Information)`\r\n  margin: 1rem 0 1rem 4rem;\r\n  color: ${Colors.BlackText};\r\n`;\r\n\r\nconst DoubleImageContainer = styled.div`\r\n  display: flex;\r\n  > * {\r\n    flex: 1;\r\n    &:first-child {\r\n      margin-right: 1em;\r\n    }\r\n  }\r\n`;\r\n\r\ntype SectionProps = {\r\n  section: PageSection;\r\n};\r\n\r\nconst CaptionedImages: React.FC<SectionProps> = ({ section }) => {\r\n  const {\r\n    image1Tall,\r\n    image1Wide,\r\n    image1Caption,\r\n    image2Tall,\r\n    image2Wide,\r\n    image2Caption,\r\n  } = section;\r\n  const hasNoImage = !image1Tall && !image2Tall;\r\n  const hasTwoImages = image1Tall && image2Tall;\r\n  if (hasNoImage) return null;\r\n  if (!hasTwoImages)\r\n    return (\r\n      <Images.CaptionedImage\r\n        caption={image1Caption! ?? image2Caption!}\r\n        alt={image1Wide?.alt! ?? image2Wide?.alt!}\r\n        src={image1Wide?.url! ?? image2Wide?.url!}\r\n      />\r\n    );\r\n  return (\r\n    <DoubleImageContainer>\r\n      <Images.CaptionedImage\r\n        caption={image1Caption!}\r\n        alt={image1Tall?.alt!}\r\n        src={image1Tall?.url!}\r\n      />\r\n      <Images.CaptionedImage\r\n        caption={image2Caption!}\r\n        alt={image2Tall?.alt!}\r\n        src={image2Tall?.url!}\r\n      />\r\n    </DoubleImageContainer>\r\n  );\r\n};\r\n\r\nconst Section: React.FC<SectionProps> = ({ section }) => (\r\n  <SectionContainer>\r\n    <Title>{section.title}</Title>\r\n    <InformationText>{section.text}</InformationText>\r\n    <CaptionedImages section={section} />\r\n  </SectionContainer>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from 'styles';\r\n\r\nconst TITLE_SIZE = 4;\r\n\r\nconst Container = styled.div`\r\n  color: ${Colors.White};\r\n  background-color: ${Colors.BlueDark};\r\n  margin-top: -${TITLE_SIZE + 6}rem;\r\n  position: absolute;\r\n  padding: 0.4rem 4rem 0.4rem 2rem;\r\n  border-radius: 0.5rem;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: ${TITLE_SIZE}rem;\r\n  letter-spacing: 1.2rem;\r\n  line-height: 1.3;\r\n`;\r\n\r\ntype TitleBannerProps = {\r\n  title: string;\r\n};\r\n\r\nconst TitleBanner: React.FC<TitleBannerProps> = ({ children, title }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    {children}\r\n  </Container>\r\n);\r\n\r\nexport default TitleBanner;\r\n","import styled from 'styled-components';\r\nimport { Colors } from 'styles';\r\n\r\nconst MARGIN = '1.2rem';\r\n\r\nconst TitleTwoLines = styled.div`\r\n  width: 100%;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n  text-transform: uppercase;\r\n  margin: 1rem 0;\r\n\r\n  &:before,\r\n  &:after {\r\n    background-color: ${Colors.Black};\r\n    content: '';\r\n    display: inline-block;\r\n    height: 0.15rem;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    width: 50%;\r\n  }\r\n\r\n  &:before {\r\n    right: ${MARGIN};\r\n    margin-left: -50%;\r\n  }\r\n\r\n  &:after {\r\n    left: ${MARGIN};\r\n    margin-right: -50%;\r\n  }\r\n`;\r\n\r\nexport default TitleTwoLines;\r\n","import React from 'react';\r\n\r\nconst HomePage: React.FC = () => {\r\n  return null;\r\n};\r\n\r\nexport default HomePage;\r\n","type EnvParams = {\r\n  api: string;\r\n};\r\n\r\nconst production: EnvParams = {\r\n  api: `https://api.${window.location.host}/v2`,\r\n};\r\n\r\nconst local: EnvParams = {\r\n  api: 'http://localhost:8000/api/v2',\r\n};\r\n\r\nconst env = process.env.REACT_APP_ENV;\r\n\r\nconst envParams: EnvParams = env === 'production' ? production : local;\r\n\r\nexport default envParams;\r\n","import axios from 'axios';\r\n\r\nimport EnvParams from 'environment';\r\n\r\nconst connector = axios.create({\r\n  baseURL: `${EnvParams.api}`,\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default connector;\r\n","import connector from './connector';\r\n\r\nimport { ExperiencePage, PlacePage, RegionPage } from 'types';\r\n\r\nexport const getPlaces = async (regionPageId: string): Promise<PlacePage[]> => {\r\n  const { data } = await connector.get(\r\n    `/places/?type=pages.PlacePage&fields=portrait_image,address&child_of=${regionPageId}`,\r\n  );\r\n  return data.items;\r\n};\r\n\r\nexport const getPlacePage = async (slug: string): Promise<PlacePage> => {\r\n  const { data } = await connector.get(`/places/${slug}/`);\r\n  return data;\r\n};\r\n\r\nexport const getExperiencePage = async (\r\n  slug: string,\r\n): Promise<ExperiencePage> => {\r\n  const { data } = await connector.get(`/experiences/${slug}/`);\r\n  return data;\r\n};\r\n\r\nexport const getRegionPage = async (slug: string): Promise<RegionPage> => {\r\n  const { data } = await connector.get(`/regions/${slug}/`);\r\n  const places = await getPlaces(data.id);\r\n  return { ...data, places };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { Breadcrumbs, Containers, Section, TitleBanner } from 'components';\r\nimport { PageService } from 'services';\r\nimport { ExperiencePage as ExperiencePageType } from 'types';\r\n\r\nconst ExperiencePage: React.FC = () => {\r\n  const slug = useParams<{ slug: string }>().slug;\r\n  const [experience, setExperience] = useState<ExperiencePageType | null>(null);\r\n  useEffect(() => {\r\n    getPlace();\r\n  }, []);\r\n\r\n  const getPlace = async () => {\r\n    const response = await PageService.getExperiencePage(slug);\r\n    setExperience(response);\r\n  };\r\n\r\n  return !experience ? null : (\r\n    <Containers.PageContainer image={experience.headerImage}>\r\n      <TitleBanner title={experience.title}>\r\n        <Breadcrumbs\r\n          crumbs={[\r\n            {\r\n              label: 'Experience',\r\n              link: '/experience',\r\n            },\r\n            {\r\n              label: experience.title,\r\n            },\r\n          ]}\r\n        />\r\n      </TitleBanner>\r\n      {experience.sections.map((section) => (\r\n        <Section key={section.id} section={section} />\r\n      ))}\r\n    </Containers.PageContainer>\r\n  );\r\n};\r\n\r\nexport default ExperiencePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport {\r\n  Breadcrumbs,\r\n  Containers,\r\n  Images,\r\n  Layout,\r\n  Section,\r\n  Text,\r\n  TitleBanner,\r\n  TitleTwoLines,\r\n} from 'components';\r\nimport { PageService } from 'services';\r\nimport { PlacePage as PlacePageType } from 'types';\r\nimport styled from 'styled-components';\r\n\r\nconst SideContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst PlacePage: React.FC = () => {\r\n  const slug = useParams<{ slug: string }>().slug;\r\n  const [place, setPlace] = useState<PlacePageType | null>(null);\r\n  useEffect(() => {\r\n    getPlace();\r\n  }, [slug]);\r\n\r\n  const getPlace = async () => {\r\n    const response = await PageService.getPlacePage(slug);\r\n    setPlace(response);\r\n  };\r\n\r\n  return !place ? null : (\r\n    <Containers.PageContainer image={place.headerImage}>\r\n      <TitleBanner title={place.title}>\r\n        <Breadcrumbs\r\n          crumbs={[\r\n            {\r\n              label: 'Destinations',\r\n              link: '/places',\r\n            },\r\n            {\r\n              label: place.meta.parent?.title ?? '',\r\n              link: `/regions/${\r\n                place.meta.parent?.title.toLocaleLowerCase() ?? ''\r\n              }`,\r\n            },\r\n            {\r\n              label: place.title,\r\n            },\r\n          ]}\r\n        />\r\n      </TitleBanner>\r\n      <Layout.Row>\r\n        <Layout.Col md={9}>\r\n          <Text.Description>{place.description}</Text.Description>\r\n          {place.sections.map((section) => (\r\n            <Section key={section.id} section={section} />\r\n          ))}\r\n        </Layout.Col>\r\n        <Layout.Col md={3}>\r\n          <SideContainer>\r\n            <Images.Image src=\"/assets/iceland-silhouette.png\" width=\"100%\" />\r\n            <Text.Text>Address: {place.address}</Text.Text>\r\n            <Text.Text>\r\n              Coordinates: {place.latitude} - {place.longitude}\r\n            </Text.Text>\r\n            <TitleTwoLines>Services</TitleTwoLines>\r\n            <TitleTwoLines>Opening hours</TitleTwoLines>\r\n            <TitleTwoLines>Admission fee</TitleTwoLines>\r\n            <TitleTwoLines>Share</TitleTwoLines>\r\n            <TitleTwoLines>Categories</TitleTwoLines>\r\n          </SideContainer>\r\n        </Layout.Col>\r\n      </Layout.Row>\r\n    </Containers.PageContainer>\r\n  );\r\n};\r\n\r\nexport default PlacePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport {\r\n  Breadcrumbs,\r\n  Containers,\r\n  PortraitHorizontalList,\r\n  Section,\r\n  TitleBanner,\r\n} from 'components';\r\nimport { PageService } from 'services';\r\nimport { RegionPage as RegionPageType } from 'types';\r\nimport { FaMapMarkerAlt } from 'react-icons/fa';\r\n\r\nconst AddressContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  svg {\r\n    margin-right: 0.3rem;\r\n  }\r\n`;\r\n\r\nconst ExperiencePage: React.FC = () => {\r\n  const slug = useParams<{ slug: string }>().slug;\r\n  const [region, setRegion] = useState<RegionPageType | null>(null);\r\n  useEffect(() => {\r\n    getRegion();\r\n  }, [slug]);\r\n\r\n  const getRegion = async () => {\r\n    const response = await PageService.getRegionPage(slug);\r\n    setRegion(response);\r\n  };\r\n\r\n  return !region ? null : (\r\n    <Containers.PageContainer image={region.headerImage}>\r\n      <TitleBanner title={region.title}>\r\n        <Breadcrumbs\r\n          crumbs={[\r\n            {\r\n              label: 'Regions',\r\n              link: '/regions',\r\n            },\r\n            {\r\n              label: region.title,\r\n            },\r\n          ]}\r\n        />\r\n      </TitleBanner>\r\n      <PortraitHorizontalList\r\n        items={region.places.map((place) => ({\r\n          title: place.title,\r\n          subtitle: (\r\n            <AddressContainer>\r\n              <FaMapMarkerAlt />\r\n              {place.address}\r\n            </AddressContainer>\r\n          ),\r\n          image: place.portraitImage,\r\n          route: `/places/${place.meta.slug}`,\r\n        }))}\r\n        title={`Explore the ${region.title}`}\r\n      />\r\n      {region.sections.map((section) => (\r\n        <Section key={section.id} section={section} />\r\n      ))}\r\n    </Containers.PageContainer>\r\n  );\r\n};\r\n\r\nexport default ExperiencePage;\r\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ScrollToTop: React.FC = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const removeListener = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      removeListener();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport { Containers, Footer, Header } from 'components';\n\nimport HomePage from 'pages/HomePage';\nimport ExperiencePage from 'pages/ExperiencePage';\nimport PlacePage from 'pages/PlacePage';\nimport RegionPage from 'pages/RegionPage';\nimport ScrollToTop from 'components/ScrollToTop';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'styles/GlobalOverride.css';\n\nconst App = () => (\n  <Router>\n    <ScrollToTop />\n    <Containers.AppContainer>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/places/:slug\" component={PlacePage} />\n        <Route exact path=\"/experience/:slug\" component={ExperiencePage} />\n        <Route exact path=\"/regions/:slug\" component={RegionPage} />\n        <Redirect to=\"/\" />\n      </Switch>\n      <Footer />\n    </Containers.AppContainer>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}